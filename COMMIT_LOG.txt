\\---------------- Commit #43 on 29/10/2022 ------------------------------------------------//
Finished formalizing the testing document and made some minor updates to some files.



\\---------------- Commit #42 on 28/10/2022 ------------------------------------------------//
Finished testing the distance travelled functionality. My tests check:
    correct/accurate conversion from geodetic coordinates to ECEF coordinates
    correct/accurate distance calculation between two gps events
    0m travelled when there are not at least two distinct events
    0m travelled when a list of 2 events have the same coordinates
    correct/accurate distance calculation for a list of events
    cell gets updated to the expected distance appropriately


\\---------------- Commit #41 on 27/10/2022 ------------------------------------------------//
Modularized code into the getSlidingWindow() function. Tested this function by:
    checking that it doesn't contain events outside of its time window
    checking that it doesn't contain events outside of the control panel's restrictions



\\---------------- Commit #40 on 27/10/2022 ------------------------------------------------//
Finished implementing getFilteredEventCells() so that its output takes into account the 
control panel's current restrictions.



\\---------------- Commit #39 on 27/10/2022 ------------------------------------------------//
Updated ControlPanel class by making use of the addComponent() function, and updating the
GridBagLayout structure of its display.



\\---------------- Commit #38 on 27/10/2022 ------------------------------------------------//
Updated tests for the previous AllEventsComponent and EventsWithinRangeComponent classes.



\\---------------- Commit #37 on 26/10/2022 ------------------------------------------------//
Continued the refactoring of my code. My GUI now displays the distance travelled for events 
within the last 5 minutes. I have also 'cleaned' up the code and filled out the Javadoc 
comments for all the new functions.



\\---------------- Commit #36 on 26/10/2022 ------------------------------------------------//
Continued the refactoring of my code. My GUI now displays the control panel, the most recent 
event, and the most recent filtered events using functions that contains the code from the
AllEventsComponent and EventsWithinRangeComponent respectively. I have kept the control 
panel as a class file due to how my other code depends on it.



\\---------------- Commit #35 on 26/10/2022 ------------------------------------------------//
Updated SimplifiedTrackers_Test to reflect my changes to the code.



\\---------------- Commit #34 on 25/10/2022 ------------------------------------------------//
Started a soft reboot of my code to improve on the GUI and testing capabilities. Created a 
table that now displays the information previous used in the SimplifiedTrackersComponent.  
Created a function that returns an array of cells containing the simplified tracking info,
making it much easier to test. 



\\---------------- Commit #33 on 25/10/2022 ------------------------------------------------//
Updated classes so that the control panel can be passed as a parameter in the constructors.



\\---------------- Commit #32 on 25/10/2022 ------------------------------------------------//
The component now displays a panel for each tracker containing the tracker's number, and the
distance travelled in the last 10 seconds (will update to 5 minutes later). Also updated the
fonts.



\\---------------- Commit #31 on 25/10/2022 ------------------------------------------------//
Converted altitude into meters before using it in the haversine function. Implemented 
alternative distance function that converts a given latitude, longitude, and altitude to a
set of ECEF coordinates in the form of X,Y,Z. The standard Euclidean distance formula can 
thus be applied to it.



\\---------------- Commit #30 on 25/10/2022 ------------------------------------------------//
Implemented haversine distance function and updated the cell to now hold the distance 
travelled between the events in the sliding window.



\\---------------- Commit #29 on 23/10/2022 ------------------------------------------------//
Ignored warnings of code I copied from GpsService, and converted all TimerSystems to 
SecondsTimerSystem because it is easier to work with seconds than milliseconds at the scale 
we are using time in. Also made sure the type of the parameters of every lambda function are
written so it is easier to see what they are. 



\\---------------- Commit #28 on 23/10/2022 ------------------------------------------------//
Implemented the sliding window in the form of a stream.



\\---------------- Commit #27 on 23/10/2022 ------------------------------------------------//
Added field to GpsEvent to hold the time it was added to the DistanceTravelledComponent. 
Created the Sodium logic to remove events older than 5 seconds from the accumulating cell
list. 



\\---------------- Commit #26 on 23/10/2022 ------------------------------------------------//
Created new class file for the fourth display. Began trying things out.



\\---------------- Commit #25 on 23/10/2022 ------------------------------------------------//
Finished testing the EventsWithinRangeComponent. The test checks:
    events within range get set
    events outside of range do not get set

Also wrote some documentation for my testing on this component.


\\---------------- Commit #24 on 23/10/2022 ------------------------------------------------//
Finished implementing EventsWithinRangeComponent by using the cells of the ControlPanel to
filter out events that are not in the range of those cells' values. Updated the ControlPanel
and its test file to take a Unit StreamSink as a parameter, so we can simulate the button
click in testing.



\\---------------- Commit #23 on 22/10/2022 ------------------------------------------------//
Finished testing the ControlPanelComponent. The tests check:
    valid and invalid latitude inputs
    valid and invalid longitude inputs
    applying the restriction sets the cells values correctly
    applying the restriction clears the text fields



\\---------------- Commit #22 on 22/10/2022 ------------------------------------------------//
Set up for testing.



\\---------------- Commit #21 on 22/10/2022 ------------------------------------------------//
Used the naming convention in the book where 's' is prepended before a stream variable. I
also did the same for cells by prepending a 'c'. Finished the main functionality required
for the control panel, by setting up cells to hold the snapshotted values upon the click of 
the button. Also finished the structure of the panel using GridBagLayout.



\\---------------- Commit #20 on 22/10/2022 ------------------------------------------------//
Updated the SimpleTrackersComponent such that a cell holds a SimpleGpsEvent, and the 3 cells
get their values by mapping from that cell. Updated SimpleGpsEvent class to reflect these
changes and put some of the work in the class.



\\---------------- Commit #19 on 21/10/2022 ------------------------------------------------//
Made some progress on the control panel. Modified the Rule class to hold a Lambda4 function
because we will be using 4 cells as input.



\\---------------- Commit #18 on 21/10/2022 ------------------------------------------------//
Removed the timeStampString because the assignment doesn't actually specify it. Began work 
on the control panel leading me to create a new Rule class that encapsulates business rules.
This allows the control panel to only apply valid latitude and longitudes.



\\---------------- Commit #17 on 21/10/2022 ------------------------------------------------//
Moved the mergeStreams() and periodic() functions into myGUI because they will be used by
multiple classes. Created the EventsWithinRangeComponent file and a new class for a control
panel because it will be used in two display components.



\\---------------- Commit #16 on 21/10/2022 ------------------------------------------------//
Tested the AllEventsComponent by:
    checking that the eventString cell is receiving all events from the merged stream
    checking that the eventString cell is cleared after ~3 seconds of no event arrivals



\\---------------- Commit #15 on 21/10/2022 ------------------------------------------------//
Indented to a new line when a primitive or long Lambda function is usedto reduce the length
of the lines. Created test file for the AllEventsComponent.



\\---------------- Commit #14 on 20/10/2022 ------------------------------------------------//
'Cleaned' up the code.



\\---------------- Commit #13 on 20/10/2022 ------------------------------------------------//
Implemented a timer that will clear the event if 3 seconds go by without another event 
occurring.



\\---------------- Commit #12 on 20/10/2022 ------------------------------------------------//
Updated GpsEvent's toString() function to meet assignment spec. Added timestamp to display.
Updated display to be more visually appealing.



\\---------------- Commit #11 on 20/10/2022 ------------------------------------------------//
I have started implementing the AllEventsComponent. I have set up a rudimentary display so 
I can see whether the merging worked as intended.



\\---------------- Commit #10 on 18/10/2022 ------------------------------------------------//
I updated a test to not use the listen() function because it does not seem to execute the
handler function while running the test. The test now checks the value by holding values of 
the stream in cells and then sampling those cells. Wrote some documentation for my testing
document.



\\---------------- Commit #9 on 18/10/2022 ------------------------------------------------//
Wrote another test for SimplifiedTrackersComponent. The test checks that the cells are 
being passed the correct data and that each group of cells are for the correct tracker.



\\---------------- Commit #8 on 18/10/2022 ------------------------------------------------//
Created own file for SimplifiedTrackersComponent and wrote a test for it. It tests whether
the stripAltitude() function correctly sets the carried over fields. The test doesn't 
explicitly check whether the altitude is stripped, because it is obvious and easy to see 
that the SimpleGpsEvent does not carry that field.



\\---------------- Commit #7 on 18/10/2022 ------------------------------------------------//
Created stripAltitude() function to convert a GpsEvent stream to a SimpleGpsEvent stream.
Also stored the cells used in the first display, and pass the constructor streams directly
to aid testing. Created skeleton test file.



\\---------------- Commit #6 on 17/10/2022 ------------------------------------------------//
Added a JTabbedPane to switch between each of the required GUI displays. Updated the first
display to be more visually appealing.



\\---------------- Commit #5 on 17/10/2022 ------------------------------------------------//
Created SimpleGpsEvent to represent a GpsEvent stripped of its altitude. I mapped the 
GpsEvent stream to the new SimpleGpsEvent class to strip the altitude. To extract the 
required fields for the first display, I used map() 3 times to 3 different cells. I then
added SLabels to track and display the values of the cells as they get updated.



\\---------------- Commit #4 on 16/10/2022 ------------------------------------------------//
Updated myGUI class to extend JFrame and moved some configuration options over to main().
Added the arrays I believe I'll need for the construction of the first component.



\\---------------- Commit #3 on 16/10/2022 ------------------------------------------------//
I created the myGUI file which will create my GUI design using a few subclasses. Also set
some configuration for the JFrame, and wrote some skeleton code.



\\---------------- Commit #2 on 13/10/2022 ------------------------------------------------//
I added the sodium.jar file and discovered that by putting it into the parent directory, 
my IDE stops showing errors related to the jar. I wish I knew about this in previous 
assignments since my test files would show errors because it could not detect classes and
functions from the JUnit jar.



\\---------------- Commit #1 on 13/10/2022 ------------------------------------------------//
Just setting up the directory and given files. I'll mainly use this file to give a more
detailed explanation of what I have done in each commit.